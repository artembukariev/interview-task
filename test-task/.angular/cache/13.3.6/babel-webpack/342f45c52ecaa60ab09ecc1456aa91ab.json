{"ast":null,"code":"import * as moment from \"moment\";\nimport { takeUntil } from \"rxjs/operators\";\nimport { Subject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./sercice/candlestick-chart.service.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"ng-apexcharts\";\nconst _c0 = [\"chart\"];\n\nfunction CandlestickChartComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelement(1, \"apx-chart\", 2);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"series\", ctx_r0.chartOptions.series)(\"chart\", ctx_r0.chartOptions.chart)(\"xaxis\", ctx_r0.chartOptions.xaxis)(\"yaxis\", ctx_r0.chartOptions.yaxis)(\"title\", ctx_r0.chartOptions.title)(\"tooltip\", ctx_r0.chartOptions.tooltip);\n  }\n}\n\nexport let CandlestickChartComponent = /*#__PURE__*/(() => {\n  class CandlestickChartComponent {\n    constructor(chartService) {\n      this.chartService = chartService;\n      this.destroy$ = new Subject();\n      this.values = [];\n      this.chartData = [{\n        x: new Date(Date.now()),\n        y: [30367.46, 30367.46, 30367.46, 30367.46]\n      }];\n      this.initGraph();\n    }\n\n    updateSeries(data) {\n      this.chartOptions.series = [{\n        data: data\n      }];\n    }\n\n    initGraph() {\n      this.chartOptions = {\n        series: [{\n          name: \"candle\",\n          data: this.chartData.slice()\n        }],\n        chart: {\n          height: 500,\n          type: \"candlestick\",\n          animations: {\n            enabled: true,\n            includesDynamicAnimations: {\n              speed: 1000\n            }\n          }\n        },\n        title: {\n          text: \"Buy or Cry\",\n          align: \"center\"\n        },\n        tooltip: {\n          enabled: true\n        },\n        xaxis: {\n          type: \"category\",\n          borderColor: '#999',\n          tickAmount: 2,\n          labels: {\n            formatter: function (val) {\n              return moment(val).format(\"MMM DD HH:mm:ss\");\n            }\n          }\n        },\n        yaxis: {\n          tickAmount: 2,\n          tooltip: {\n            enabled: true\n          }\n        }\n      };\n    }\n\n    ngOnInit() {\n      this.chartService.getChartData().pipe(takeUntil(this.destroy$)).subscribe(res => {\n        this.data = res.bitcoin;\n\n        if (this.values.length !== 4 && this.data) {\n          this.values.push(+res.bitcoin);\n        } else if (this.values.length === 4) {\n          this.chartData.push({\n            x: new Date(Date.now()),\n            y: this.values\n          });\n          this.values = [];\n        }\n\n        this.updateSeries(this.chartData);\n      });\n    }\n\n    ngOnDestroy() {\n      this.destroy$.next(true);\n      this.destroy$.unsubscribe();\n    }\n\n  }\n\n  CandlestickChartComponent.ɵfac = function CandlestickChartComponent_Factory(t) {\n    return new (t || CandlestickChartComponent)(i0.ɵɵdirectiveInject(i1.CandlestickChartService));\n  };\n\n  CandlestickChartComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CandlestickChartComponent,\n    selectors: [[\"app-candlestick-chart\"]],\n    viewQuery: function CandlestickChartComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.chart = _t.first);\n      }\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"id\", \"chart\", 4, \"ngIf\"], [\"id\", \"chart\"], [3, \"series\", \"chart\", \"xaxis\", \"yaxis\", \"title\", \"tooltip\"]],\n    template: function CandlestickChartComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CandlestickChartComponent_div_0_Template, 2, 6, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.data);\n      }\n    },\n    directives: [i2.NgIf, i3.ChartComponent],\n    styles: [\"\"]\n  });\n  return CandlestickChartComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}